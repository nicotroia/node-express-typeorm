version: '3.7'

services:
  node0:
    container_name: node0-prod
    environment:
      NODE_ENV: 'production'
      MESSAGE: 'hello from instance 0'
    command: npm run start

  node1:
    build: ./api
    container_name: node1-prod
    env_file: ./.env
    tty: true
    expose:
      - "${NODE_PORT}"
    depends_on:
      - postgres0
    volumes:
      - ./api:/api
    environment:
      NODE_ENV: 'production'
      MESSAGE: 'hello from instance 1'
    command: npm run start
    networks:
      - my-network

  node2:
    build: ./api
    container_name: node2-prod
    env_file: ./.env
    tty: true
    expose:
      - "${NODE_PORT}"
    depends_on:
      - postgres0
    volumes: 
      - ./api:/api
    environment:
      NODE_ENV: 'production'
      MESSAGE: 'hello from instance 2'
    command: npm run start
    networks:
      - my-network

  nginx0:
    volumes:
      # - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      # - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      # - ./nginx:/etc/nginx/conf.d
      - ./nginx:/etc/nginx
      - ./nginx/error.log:/etc/nginx/error_log.log
      - ./nginx/cache/:/etc/nginx/cache
      # - /etc/letsencrypt/:/etc/letsencrypt/
    expose:
      - "80"
      - "8080"
    ports:
      - "8080:80"
      - "443:443"
    links:
      - node0
      - node1
      - node2
